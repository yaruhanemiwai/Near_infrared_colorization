name: "MRCNN"
layer {
	name: "data"
	type: "HDF5Data"
	top: "data"
	top: "label"
#	top: "seg"
	hdf5_data_param {
	source: "./data_seg/path_train.txt"
	batch_size: 32
  	}
  	include: { phase: TRAIN }
}
#layer {
#	name: "data"
#	type: "HDF5Data"
#	top: "data"
#	top: "label"
#	top: "seg"
#	hdf5_data_param {
#	source: "./data_z/path_test.txt"
#	batch_size: 2
#	}
#  	include: { phase: TEST }
#}
#layer {
#  name: "concat"
#  bottom: "data"
#  bottom: "seg"
#  top: "data_in"
#  type: "Concat"
#  concat_param {
#    axis: 1
#  }
#}
layer {
	name: "conv1"
	type: "Convolution"
	bottom: "data"
#	bottom: "data_in"
	top: "conv1"
	param {
	lr_mult: 1
	}
	param {
	lr_mult: 0.1
	}
	convolution_param {
		num_output: 256
		kernel_size: 5
		stride: 1
		pad: 0
		weight_filler {
		    type: "msra"
#			type: "gaussian"
#			std: 0.001
		}
		bias_filler {
			type: "constant"
			value: 0
		}
	}
}
#layer {
#  bottom: "conv1"
#  top: "conv1"
#  name: "conv1_bn"
#  type: "BatchNorm"
#}
#layer {
#  bottom: "conv1"
#  top: "conv1"
#  name: "conv1_scale"
#  type: "Scale"
#  scale_param {
#    bias_term: true
#  }
#}
layer {
	name: "relu1"
	type: "ReLU"
	bottom: "conv1"
	top: "conv1"
}
#layer {
#  name: "drop1"
#  type: "Dropout"
#  bottom: "conv1"
#  top: "conv1"
#  dropout_param {
#    dropout_ratio: 0.5
#  }
#}
layer {
	name: "conv2"
	type: "Convolution"
	bottom: "conv1"
	top: "conv2"
	param {
		lr_mult: 1
	}
	param {
    		lr_mult: 0.1
  	}
	convolution_param {
		num_output: 128
		kernel_size: 5
		stride: 1
		pad: 0
		weight_filler {
		    type: "msra"
#			type: "gaussian"
#			std: 0.001
		}
		bias_filler {
			type: "constant"
			value: 0
		}
	}
}
#layer {
#  bottom: "conv2"
#  top: "conv2"
#  name: "conv2_bn"
#  type: "BatchNorm"
#}
#layer {
#  bottom: "conv2"
#  top: "conv2"
#  name: "conv2_scale"
#  type: "Scale"
#  scale_param {
#    bias_term: true
#  }
#}
layer {
	name: "relu2"
	type: "ReLU"
	bottom: "conv2"
	top: "conv2"
}
#layer {
#  name: "drop2"
#  type: "Dropout"
#  bottom: "conv2"
#  top: "conv2"
#  dropout_param {
#    dropout_ratio: 0.5
#  }
#}
layer {
	name: "conv3"
	type: "Convolution"
	bottom: "conv2"
	top: "conv3"
	param {
		lr_mult: 0.1
	}
	param {
		lr_mult: 0.1
	}
	convolution_param {
#		num_output: 3
		num_output: 1
		kernel_size: 3
		stride: 1
		pad: 0
		weight_filler {
		    type: "msra"
#			type: "gaussian"
#			std: 0.001
		}
		bias_filler {
			type: "constant"
			value: 0
		}
  	}
}
layer {
	name: "loss"
	type: "EuclideanLoss"
	bottom: "conv3"
	bottom: "label"
	top: "loss"
}
